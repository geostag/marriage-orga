"""
Django settings for marriage project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

APP_NAME = "Marriage Orga"
BASE_ADDRESS = "http://www.ostertage.de"
OUR_EMAIL = "info@ostertage.de"
SW_HEADER_INSTANCE = os.getenv("SW_HEADER_INSTANCE","None")

# TEST or PROD
INSTANCE = os.environ['INSTANCE']
RELEASE = os.environ['RELEASE']

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY","ya need a secret key in your env")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [os.getenv("HOSTNAME",""),'localhost']

if DEBUG:
    DEBUG = True
    LEVEL = "DEBUG"
    WHITENOISE_MAX_AGE = 0
else:
    DEBUG = False
    LEVEL = "WARN"
    WHITENOISE_MAX_AGE = 3600
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    

ALLOWED_HOSTS = [os.getenv("HOSTNAME",""),'localhost']

# Session information
SESSION_COOKIE_AGE = 365 * 24 * 3600
SESSION_COOKIE_NAME = "maor%s" % INSTANCE
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SESSION_CACHE_ALIAS = 'fs'

# Email settings
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv("EMAIL_HOST","")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER","")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD","you should choose a seceret one")
#EMAIL_USE_TLS = True
#EMAIL_PORT = "587"
EMAIL_USE_SSL = True
EMAIL_PORT = "465"
#EMAIL_TIMEOUT

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'backend',
    'frontend',
    'event',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # to serve static files
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'marriage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.media',
                'django.contrib.messages.context_processors.messages',
                'event.context_event.event_export',
            ],
        },
    },
]

# to export settings variables into template variables
SETTINGS_EXPORT = [
    'INSTANCE',
    'DEBUG',
    'APP_NAME',
    'RELEASE',
    'BASE_ADDRESS',
    'OUR_EMAIL',
    'SW_HEADER_INSTANCE',
    'ALB_DISABLE_REGISTRATION',
    'ALB_LOGOLINK'
]

WSGI_APPLICATION = 'marriage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
            'ENGINE':   os.getenv('DB_ENGINE'  ,"django.db.backends.sqlite3" ),
            'NAME':     os.getenv('DB_NAME'    ,os.path.join(BASE_DIR, "django-db.sqlite3") ),
            'USER':     os.getenv('DB_USER'    ,"" ),
            'PASSWORD': os.getenv('DB_PASSWORD',"" ),
            'HOST':     os.getenv('DB_HOST'    ,"" ),
            'PORT':     os.getenv('DB_PORT'    ,"" ),
    }
}
DATA_UPLOAD_MAX_MEMORY_SIZE = 50 * 1024 * 1024  

CACHE_TIMEOUT = 60
CACHE_TIMEOUT_IMAGEBASE64 = 42200
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'jstcache',
        'TIMEOUT': 3600 * 24 * 31,
    },
    'fs' : {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/jst_cache_%s' % INSTANCE,
        'TIMEOUT': 60,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'de-de'
TIME_ZONE = 'Europe/Berlin'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
RUNTIME_DIR = os.environ["dj_runtimedir"]

PFX = os.getenv("appname","set_appname_in_env.sh")
if INSTANCE == "PROD":
    STATIC_URL  = '/%s-static/' % PFX
    MEDIA_URL   = '/%s-media/' % PFX
else:
    STATIC_URL  = '/%s%s-static/' % (PFX,INSTANCE)
    MEDIA_URL   = '/%s%s-media/' % (PFX,INSTANCE)

STATIC_ROOT = os.path.join( RUNTIME_DIR,"static")
MEDIA_ROOT = os.path.join( RUNTIME_DIR,"media")
MYMEDIA_URL = MEDIA_URL

LOGIN_URL = "login"
LOGIN_REDIRECT_URL = 'frontend.views.base'
